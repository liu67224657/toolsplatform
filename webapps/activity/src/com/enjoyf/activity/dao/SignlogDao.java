package com.enjoyf.activity.dao;import com.enjoyf.activity.bean.ActivityCountry;import com.enjoyf.activity.bean.ValidStatus;import com.enjoyf.activity.bean.sign.Signlog;import com.enjoyf.framework.jdbc.bean.DataBean;import com.enjoyf.framework.jdbc.exception.JoymeDBException;import com.enjoyf.framework.jdbc.impl.BaseJDBCDAOImpl;import java.sql.Connection;import java.sql.ResultSet;import java.sql.SQLException;import java.util.ArrayList;import java.util.Date;import java.util.List;public class SignlogDao extends BaseJDBCDAOImpl {   /**    * date 2016-09-07 15:52:38    * @author shenqiv0.1    * @param signlogId    * @return Signlog     */public Signlog querySignlogbyId(Connection conn,  String signlogId) throws JoymeDBException {  DataBean dbean = null;  try {      String sql = "SELECT * FROM signlog  WHERE signlog_id = ?";      List objectList = new ArrayList();      objectList.add(signlogId);      dbean = this.executeBindingQuery(conn, sql, objectList.toArray());      List retList = new ArrayList();      ResultSet rs = dbean.getRs();      while (rs.next()) {           Signlog signlog = rsToObjet(rs);           return signlog;      }    return null;  } catch (Exception e) {      throw new JoymeDBException(e);  } finally {      this.cleanup(dbean, false);  }}   /**    * date 2016-09-07 15:52:38    * @author shenqiv0.1    * @param bean    * @return int 1 success, 0 failed    */public int insertSignlog(Connection conn,  Signlog bean)  throws JoymeDBException{   try{      String sql = "INSERT INTO signlog(signlog_id,profile_id,sign_date,gamecode,point,create_time,sign_id) VALUES (?,?,?,?,?,?,?)";      Object[] objects = new Object[] {bean.getSignlogId(),bean.getProfileId(),bean.getSignDate(),bean.getGamecode(),bean.getPoint(),bean.getCreateTime(),bean.getSignId()};       return this.executeBindingUpdate(conn, sql, objects, false, false); }catch (Exception e) {       throw new JoymeDBException(e); }}   /**    * date 2016-09-07 15:52:38    * @author shenqiv0.1    * @param bean    * @return int 1 success, 0 failed    */public int updateSignlog(Connection conn,  Signlog bean)  throws JoymeDBException{  try{        String sql = "UPDATE signlog SET $updateStr  WHERE signlog_id = ?";        List objectList = new ArrayList();        List columnList = bean.getNotNullColumnList();        sql = sql.replace("$updateStr", this.setUpdate(columnList, objectList));      objectList.add(bean.getSignlogId());      return this.executeBindingUpdate(conn, sql, objectList.toArray(), false, false);      }catch (Exception e) {         throw new JoymeDBException(e);    }   }   /**    * date 2016-09-07 15:52:38    * @author shenqiv0.1    * @param signlogId    * @return int 1 success, 0 failed    */public int deleteSignlog(Connection conn,  String signlogId)  throws JoymeDBException{   try{      String sql = "DELETE FROM signlog  WHERE signlog_id = ?";  List objectList = new ArrayList();      objectList.add(signlogId);      return this.executeBindingUpdate(conn, sql, objectList.toArray(), false, false); }catch (Exception e) {       throw new JoymeDBException(e); }}    public List<Signlog> getSignLogByDate(Connection conn, String openid,String gamecode, Date startDate, Date endDate) throws JoymeDBException {        DataBean dbean = null;        try {            String sql = "SELECT * from signlog where profile_id = ? and gamecode = ? and create_time >= ? and create_time <= ? ORDER BY create_time desc ";            List objectList = new ArrayList();            objectList.add(openid);            objectList.add(gamecode);            objectList.add(startDate);            objectList.add(endDate);            dbean = this.executeBindingQuery(conn, sql, objectList.toArray());            List retList = new ArrayList();            ResultSet rs = dbean.getRs();            while (rs.next()) {                retList.add(rsToObjet(rs));            }            return retList;        } catch (Exception e) {            throw new JoymeDBException(e);        } finally {            this.cleanup(dbean, false);        }    }    private Signlog rsToObjet(ResultSet rs) throws SQLException {        Signlog signlog = new Signlog();        signlog.setSignlogId(rs.getString("signlog_id"));        signlog.setProfileId(rs.getString("profile_id"));        signlog.setSignDate(rs.getDate("sign_date"));        signlog.setGamecode(rs.getString("gamecode"));        signlog.setPoint(rs.getInt("point"));        signlog.setCreateTime(rs.getTimestamp("create_time"));        signlog.setSignId(rs.getLong("sign_id"));        return signlog;    }    /*public Integer querySignlogTotal(Connection conn, String openid) throws JoymeDBException {        DataBean dbean = null;        try {            String countSql = "SELECT count(*) from signlog  where profile_id = ? ";            List objectList = new ArrayList();            objectList.add(openid);            Integer count = 0;            dbean = this.executeBindingQuery(conn, countSql, objectList.toArray());            ResultSet countRs = dbean.getRs();            if (countRs.next()) {                count = countRs.getInt(1);            }            return count;        } catch (Exception e) {            throw new JoymeDBException(e);        } finally {            this.cleanup(dbean, false);        }    }*/    public List<Signlog> getSignlogPage(Connection conn, String openid, String gamecode,int pageSize, int pageNum) throws JoymeDBException {        DataBean dbean = null;        try {            String countSql = "SELECT * from signlog  where profile_id = ? and gamecode = ? order by create_time desc limit " + pageSize*pageNum + ","+ pageSize;            List objectList = new ArrayList();            objectList.add(openid);            objectList.add(gamecode);            dbean = this.executeBindingQuery(conn, countSql, objectList.toArray());            List retList = new ArrayList();            ResultSet rs = dbean.getRs();            while (rs.next()) {                retList.add(rsToObjet(rs));            }            return retList;        } catch (Exception e) {            throw new JoymeDBException(e);        } finally {            this.cleanup(dbean, false);        }    }}