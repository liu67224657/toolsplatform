package com.enjoyf.activity.dao;import com.enjoyf.activity.bean.question.QuestionLog;import com.enjoyf.framework.jdbc.bean.DataBean;import com.enjoyf.framework.jdbc.exception.JoymeDBException;import com.enjoyf.framework.jdbc.impl.BaseJDBCDAOImpl;import java.sql.Connection;import java.sql.ResultSet;import java.util.ArrayList;import java.util.List;public class QuestionLogDao extends BaseJDBCDAOImpl {   /**    * date 2016-09-07 20:58:12    * @author shenqiv0.1    * @param questionlogId    * @return QuestionLog     */public QuestionLog queryQuestionLogbyId(Connection conn,  String questionlogId) throws JoymeDBException {  DataBean dbean = null;  try {      String sql = "SELECT * FROM question_log  WHERE questionlog_id = ?";      List objectList = new ArrayList();      objectList.add(questionlogId);      dbean = this.executeBindingQuery(conn, sql, objectList.toArray());      List retList = new ArrayList();      ResultSet rs = dbean.getRs();      while (rs.next()) {           QuestionLog questionLog = new QuestionLog();           questionLog.setQuestionlogId(rs.getString("questionlog_id"));           questionLog.setQuestionid(rs.getString("questionid"));           questionLog.setProfileid(rs.getString("profileid"));           questionLog.setIscorrect(rs.getInt("iscorrect"));           questionLog.setGamecode(rs.getString("gamecode"));           questionLog.setCreateTime(rs.getTimestamp("create_time"));           questionLog.setPoint(rs.getInt("point"));           questionLog.setAnswer(rs.getString("answer"));           questionLog.setAnswerDate(rs.getDate("answer_date"));           return questionLog;      }    return null;  } catch (Exception e) {      throw new JoymeDBException(e);  } finally {      this.cleanup(dbean, false);  }}   /**    * date 2016-09-07 20:58:12    * @author shenqiv0.1    * @param bean    * @return int 1 success, 0 failed    */public int insertQuestionLog(Connection conn,  QuestionLog bean)  throws JoymeDBException{   try{      String sql = "INSERT INTO question_log(questionlog_id,questionid,profileid,iscorrect,gamecode,create_time,point,answer,answer_date) VALUES (?,?,?,?,?,?,?,?,?)";      Object[] objects = new Object[] {bean.getQuestionlogId(),bean.getQuestionid(),bean.getProfileid(),bean.getIscorrect(),bean.getGamecode(),bean.getCreateTime(),bean.getPoint(),bean.getAnswer(),bean.getAnswerDate()};       return this.executeBindingUpdate(conn, sql, objects, false, false); }catch (Exception e) {       throw new JoymeDBException(e); }}   /**    * date 2016-09-07 20:58:12    * @author shenqiv0.1    * @param bean    * @return int 1 success, 0 failed    */public int updateQuestionLog(Connection conn,  QuestionLog bean)  throws JoymeDBException{  try{        String sql = "UPDATE question_log SET $updateStr  WHERE questionlog_id = ?";        List objectList = new ArrayList();        List columnList = bean.getNotNullColumnList();        sql = sql.replace("$updateStr", this.setUpdate(columnList, objectList));      objectList.add(bean.getQuestionlogId());      return this.executeBindingUpdate(conn, sql, objectList.toArray(), false, false);      }catch (Exception e) {         throw new JoymeDBException(e);    }   }   /**    * date 2016-09-07 20:58:12    * @author shenqiv0.1    * @param questionlogId    * @return int 1 success, 0 failed    */public int deleteQuestionLog(Connection conn,  String questionlogId)  throws JoymeDBException{   try{      String sql = "DELETE FROM question_log  WHERE questionlog_id = ?";  List objectList = new ArrayList();      objectList.add(questionlogId);      return this.executeBindingUpdate(conn, sql, objectList.toArray(), false, false); }catch (Exception e) {       throw new JoymeDBException(e); }}}