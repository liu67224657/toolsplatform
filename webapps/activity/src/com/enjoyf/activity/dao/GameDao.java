package com.enjoyf.activity.dao;import com.enjoyf.activity.bean.qyz.Game;import com.enjoyf.framework.jdbc.bean.DataBean;import com.enjoyf.framework.jdbc.exception.JoymeDBException;import com.enjoyf.framework.jdbc.impl.BaseJDBCDAOImpl;import java.sql.Connection;import java.sql.ResultSet;import java.sql.SQLException;import java.util.ArrayList;import java.util.List;public class GameDao extends BaseJDBCDAOImpl {    /**     * date 2016-09-07 15:17:46     *     * @param gameId     * @return Game     * @author shenqiv0.1     */    public Game queryGamebyId(Connection conn, String gameId) throws JoymeDBException {        DataBean dbean = null;        try {            String sql = "SELECT * FROM game  WHERE gameid = ?";            List objectList = new ArrayList();            objectList.add(gameId);            dbean = this.executeBindingQuery(conn, sql, objectList.toArray());            ResultSet rs = dbean.getRs();            if (rs.next()) {                return rsToObject(rs);            }            return null;        } catch (Exception e) {            throw new JoymeDBException(e);        } finally {            this.cleanup(dbean, false);        }    }    /**     * date 2016-09-07 15:17:46     *     * @param bean     * @return int 1 success, 0 failed     * @author shenqiv0.1     */    public int insertGame(Connection conn, Game bean) throws JoymeDBException {        try {            String sql = "INSERT INTO game(gameid,profileid,game_level,create_time) VALUES (?,?,?,?)";            Object[] objects = new Object[]{bean.getGameId(), bean.getProfileId(), bean.getGameLevel(),bean.getCreateTime()};            return this.executeBindingUpdate(conn, sql, objects, false, false);        } catch (Exception e) {            throw new JoymeDBException(e);        }    }    /**     * date 2016-09-07 15:17:46     *     * @param bean     * @return int 1 success, 0 failed     * @author shenqiv0.1     */    public int updateGame(Connection conn, Game bean) throws JoymeDBException {        try {            String sql = "UPDATE game SET $updateStr  WHERE gameid = ?";            List objectList = new ArrayList();            List columnList = bean.getNotNullColumnList();            sql = sql.replace("$updateStr", this.setUpdate(columnList, objectList));            objectList.add(bean.getGameId());            return this.executeBindingUpdate(conn, sql, objectList.toArray(), false, false);        } catch (Exception e) {            throw new JoymeDBException(e);        }    }    /**     * date 2016-09-07 15:17:46     *     * @param gameId     * @return int 1 success, 0 failed     * @author shenqiv0.1     */    public int deleteGame(Connection conn, Long gameId) throws JoymeDBException {        try {            String sql = "DELETE FROM game  WHERE gameid = ?";            List objectList = new ArrayList();            objectList.add(gameId);            return this.executeBindingUpdate(conn, sql, objectList.toArray(), false, false);        } catch (Exception e) {            throw new JoymeDBException(e);        }    }    public List queryGameByProfileid(Connection conn, String profileid) throws JoymeDBException {        DataBean dbean = null;        try {            String sql = "SELECT * FROM game where profileid=?";            List objectList = new ArrayList();            objectList.add(profileid);            dbean = this.executeBindingQuery(conn, sql, objectList.toArray());            List retList = new ArrayList();            ResultSet rs = dbean.getRs();            while (rs.next()) {                retList.add(rsToObject(rs));            }            return retList;        } catch (Exception e) {            throw new JoymeDBException(e);        } finally {            this.cleanup(dbean, false);        }    }    private Game rsToObject(ResultSet rs) throws SQLException {        Game game = new Game();        game.setGameId(rs.getString("gameid"));        game.setProfileId(rs.getString("profileid"));        game.setGameLevel(rs.getString("game_level"));        game.setCreateTime(rs.getTimestamp("create_time"));        return game;    }}